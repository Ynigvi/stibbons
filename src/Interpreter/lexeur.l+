/*Define tokens */
%{
	#define NUMBER 300
	#define STRING 301
	#define BOOLEAN 302
	#define COLOR 303
	#define NIL 304
	#define ID 305
	#define FD 306
	#define LT 307
	#define RT 308
	#define PU 309
	#define PD 310
	#define DIE 311
	#define AND 312
	#define OR 313
	#define XOR 314
	#define NOT 315

	#include <iostream>
	#include <cstring>
	
	union{
		char* s;
		double d;
	}yylval;
%}

%option noyywrap
%option case-insensitive
 
/*Rules*/
%%
true|false {return BOOLEAN;}

null {return NIL;}

fd|forward {return FD;}

lt|turn-left {return LT;}

rt|turn-right {return RT;}

pd|pen-down {return PD;}

pu|pen-up {return PU;}

die {return DIE;}

and|& {return AND;}

or|\| {return OR;}

xor|^ {return XOR;}

not|! {return NOT;}

[1-9]*\.?[0-9]+ {yylval.d=atoi(yytext);return NUMBER;}

(\"(\\\"|[^\"])*\")|('(\\'|[^'])*')|(\"\"\"(.|\\n)*\"\"\")  {yylval.s=strdup(yytext);return STRING;}

#[a-fA-F0-9]{6}|red|blue|green|yellow|black|white|brown|purple|gray|orange|pink|magenta|cyan {yylval.s=strdup(yytext);return COLOR;}

[_a-zA-Z][\-_a-zA-Z0-9]* {yylval.s=strdup(yytext);return ID;}

"//"[^\n]*\n {}

"/*"([^*]|"*"+[^*/])*"*"+"/" {}

\n {return '\n';}

[ \t]* {}

%%
/*Program*/
int main(){
    int j;
    yyFlexLexer* lex = new yyFlexLexer();
    while(0!=(j=lex->yylex())){
	
	switch(j){
	case NUMBER : std::cout<<"nombre; valeur= "<<yylval.d<<"\n"; 
	break;
	case STRING : std::cout<<"string; valeur= "<<yylval.s<<"\n";
	break;
	case BOOLEAN : std::cout<<"boolean; valeur= "<<yylval.s<<"\n";
	break;
	case NIL : std::cout<<"nil; valeur= "<<yylval.s<<"\n";
	break;
	case ID : std::cout<<"id; valeur= "<<yylval.s<<"\n";
	break;
	case FD : std::cout<<"fd; valeur= "<<yylval.s<<"\n";
	break;
	case RT : std::cout<<"rt; valeur= "<<yylval.s<<"\n";
	break;
	case LT : std::cout<<"lt; valeur= "<<yylval.s<<"\n";
	break;
	case PU : std::cout<<"pu; valeur= "<<yylval.s<<"\n";
	break;
	case PD : std::cout<<"pd; valeur= "<<yylval.s<<"\n";
	break;
	case DIE : std::cout<<"die; valeur= "<<yylval.s<<"\n";
	break;	
	default: std::cout<<"\n";
	break;
    	}
    }
    return 0;
}
